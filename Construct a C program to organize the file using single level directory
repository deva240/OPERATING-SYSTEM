#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_FILES 100
#define MAX_FILENAME_LENGTH 50

// Structure to represent a file
struct File {
    char name[MAX_FILENAME_LENGTH];
    int size;
};

// Function to display the list of files in the directory
void displayFiles(struct File files[], int fileCount) {
    printf("Files in the directory:\n");
    for (int i = 0; i < fileCount; ++i) {
        printf("%s (%d bytes)\n", files[i].name, files[i].size);
    }
}

// Function to create a new file in the directory
void createFile(struct File files[], int *fileCount, char *filename, int size) {
    if (*fileCount < MAX_FILES) {
        // Check if the file with the same name already exists
        for (int i = 0; i < *fileCount; ++i) {
            if (strcmp(files[i].name, filename) == 0) {
                printf("Error: File with the same name already exists.\n");
                return;
            }
        }

        // Create the file
        strncpy(files[*fileCount].name, filename, MAX_FILENAME_LENGTH);
        files[*fileCount].name[MAX_FILENAME_LENGTH - 1] = '\0'; // Ensure null-terminated string
        files[*fileCount].size = size;
        (*fileCount)++;
        printf("File '%s' created successfully.\n", filename);
    } else {
        printf("Error: Maximum number of files reached.\n");
    }
}

// Function to delete a file from the directory
void deleteFile(struct File files[], int *fileCount, char *filename) {
    int found = 0;
    for (int i = 0; i < *fileCount; ++i) {
        if (strcmp(files[i].name, filename) == 0) {
            // Delete the file by moving the last file to its position
            files[i] = files[*fileCount - 1];
            (*fileCount)--;
            found = 1;
            printf("File '%s' deleted successfully.\n", filename);
            break;
        }
    }

    if (!found) {
        printf("Error: File '%s' not found.\n", filename);
    }
}

int main() {
    struct File files[MAX_FILES];
    int fileCount = 0;

    while (1) {
        printf("\n1. Display files\n");
        printf("2. Create a file\n");
        printf("3. Delete a file\n");
        printf("4. Exit\n");

        int choice;
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                displayFiles(files, fileCount);
                break;
            case 2: {
                char filename[MAX_FILENAME_LENGTH];
                int size;
                printf("Enter file name: ");
                scanf("%s", filename);
                printf("Enter file size (in bytes): ");
                scanf("%d", &size);
                createFile(files, &fileCount, filename, size);
                break;
            }
            case 3: {
                char filename[MAX_FILENAME_LENGTH];
                printf("Enter file name to delete: ");
                scanf("%s", filename);
                deleteFile(files, &fileCount, filename);
                break;
            }
            case 4:
                // Exit the program
                exit(0);
            default:
                printf("Invalid choice. Please enter a valid option.\n");
        }
    }

    return 0;
}
